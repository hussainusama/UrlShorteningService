// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UrlShorteningService.IntegrationTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ShortenTheUrlThenGetBackOriginalUrlFeature : Xunit.IClassFixture<ShortenTheUrlThenGetBackOriginalUrlFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "ShortenTheUrlThenGetBackOriginalUrl.feature"
#line hidden
        
        public ShortenTheUrlThenGetBackOriginalUrlFeature(ShortenTheUrlThenGetBackOriginalUrlFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ShortenTheUrlThenGetBackOriginalUrl", "\t\tIn order to test the functinality\r\n\t\tAs a developer of the service\r\n\t\tI want to" +
                    " ensure that endpoints of the service work correctly", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Shorten the url then get back the original url")]
        [Xunit.TraitAttribute("FeatureTitle", "ShortenTheUrlThenGetBackOriginalUrl")]
        [Xunit.TraitAttribute("Description", "Shorten the url then get back the original url")]
        public virtual void ShortenTheUrlThenGetBackTheOriginalUrl()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Shorten the url then get back the original url", null, ((string[])(null)));
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Url"});
            table1.AddRow(new string[] {
                        "1",
                        "http://www.google.com"});
            table1.AddRow(new string[] {
                        "12",
                        "http://www.google.com"});
            table1.AddRow(new string[] {
                        "123",
                        "http://www.google.com"});
            table1.AddRow(new string[] {
                        "1234",
                        "http://www.google.com"});
            table1.AddRow(new string[] {
                        "12345",
                        "http://www.google.com"});
            table1.AddRow(new string[] {
                        "123456",
                        "http://www.google.com"});
#line 7
   testRunner.Given("Database contains the following UrlMap records", ((string)(null)), table1, "Given ");
#line 15
   testRunner.When("I call shorten endpoint api/url/shorten with http://www.supposedlyverylongurl.com" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
   testRunner.Then("I get an encoded string representing next database record id which is 123457", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
   testRunner.When("I call lengthen endpoint api/url/lengthen with the received encoded string", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
   testRunner.Then("I get the original url back http://www.supposedlyverylongurl.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ShortenTheUrlThenGetBackOriginalUrlFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ShortenTheUrlThenGetBackOriginalUrlFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
